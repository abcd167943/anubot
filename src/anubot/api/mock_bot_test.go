// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package api_test

import "anubot/bot"

type mockBot struct {
	ConnectCalled chan bool
	ConnectInput  struct {
		ConnConfig chan *bot.ConnConfig
	}
	ConnectOutput struct {
		Disconnected chan chan struct{}
		Err          chan error
	}
	DisconnectCalled chan bool
	ChannelCalled    chan bool
	ChannelOutput    struct {
		Ret0 chan string
	}
	InitChatFeatureCalled chan bool
	InitChatFeatureInput  struct {
		Dispatcher chan *bot.MessageDispatcher
	}
}

func newMockBot() *mockBot {
	m := &mockBot{}
	m.ConnectCalled = make(chan bool, 100)
	m.ConnectInput.ConnConfig = make(chan *bot.ConnConfig, 100)
	m.ConnectOutput.Disconnected = make(chan chan struct{}, 100)
	m.ConnectOutput.Err = make(chan error, 100)
	m.DisconnectCalled = make(chan bool, 100)
	m.ChannelCalled = make(chan bool, 100)
	m.ChannelOutput.Ret0 = make(chan string, 100)
	m.InitChatFeatureCalled = make(chan bool, 100)
	m.InitChatFeatureInput.Dispatcher = make(chan *bot.MessageDispatcher, 100)
	return m
}
func (m *mockBot) Connect(connConfig *bot.ConnConfig) (disconnected chan struct{}, err error) {
	m.ConnectCalled <- true
	m.ConnectInput.ConnConfig <- connConfig
	return <-m.ConnectOutput.Disconnected, <-m.ConnectOutput.Err
}
func (m *mockBot) Disconnect() {
	m.DisconnectCalled <- true
}
func (m *mockBot) Channel() string {
	m.ChannelCalled <- true
	return <-m.ChannelOutput.Ret0
}
func (m *mockBot) InitChatFeature(dispatcher *bot.MessageDispatcher) {
	m.InitChatFeatureCalled <- true
	m.InitChatFeatureInput.Dispatcher <- dispatcher
}
