// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package bot_test

import "github.com/fluffle/goirc/client"

type mockFeatureWriter struct {
	HandleFuncCalled chan bool
	HandleFuncInput  struct {
		User, Command chan string
		Handlefunc    chan client.HandlerFunc
	}
	PrivmsgCalled chan bool
	PrivmsgInput  struct {
		User, Target, Msg chan string
	}
	ChannelCalled chan bool
	ChannelOutput struct {
		Channel chan string
	}
}

func newMockFeatureWriter() *mockFeatureWriter {
	m := &mockFeatureWriter{}
	m.HandleFuncCalled = make(chan bool, 100)
	m.HandleFuncInput.User = make(chan string, 100)
	m.HandleFuncInput.Command = make(chan string, 100)
	m.HandleFuncInput.Handlefunc = make(chan client.HandlerFunc, 100)
	m.PrivmsgCalled = make(chan bool, 100)
	m.PrivmsgInput.User = make(chan string, 100)
	m.PrivmsgInput.Target = make(chan string, 100)
	m.PrivmsgInput.Msg = make(chan string, 100)
	m.ChannelCalled = make(chan bool, 100)
	m.ChannelOutput.Channel = make(chan string, 100)
	return m
}
func (m *mockFeatureWriter) HandleFunc(user, command string, handlefunc client.HandlerFunc) {
	m.HandleFuncCalled <- true
	m.HandleFuncInput.User <- user
	m.HandleFuncInput.Command <- command
	m.HandleFuncInput.Handlefunc <- handlefunc
}
func (m *mockFeatureWriter) Privmsg(user, target, msg string) {
	m.PrivmsgCalled <- true
	m.PrivmsgInput.User <- user
	m.PrivmsgInput.Target <- target
	m.PrivmsgInput.Msg <- msg
}
func (m *mockFeatureWriter) Channel() (channel string) {
	m.ChannelCalled <- true
	return <-m.ChannelOutput.Channel
}
